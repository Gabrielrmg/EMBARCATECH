{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\ude80 Apresenta\u00e7\u00e3o","text":""},{"location":"#nome-gabriel-martins-ribeiro","title":"Nome: Gabriel Martins Ribeiro","text":"<p>Ol\u00e1! Sou Gabriel Martins Ribeiro, engenheiro eletr\u00f4nico formado pela FCTE - UnB, com experi\u00eancia em biom\u00e9dica e sistemas embarcados.  </p>"},{"location":"#sobre-o-projeto","title":"\ud83c\udfaf Sobre o Projeto","text":"<p>Este projeto \u00e9 um sistema de tecnologia assistiva, desenvolvido para auxiliar pessoas com defici\u00eancia visual na navega\u00e7\u00e3o no ambiente atrav\u00e9s de est\u00edmulos auditivos.  </p> <p>\ud83d\udd39 Tecnologia: Placa Raspberry Pi e sensores perif\u00e9ricos \ud83d\udd39 Linguagem: C \ud83d\udd39 Funcionalidade: Detec\u00e7\u00e3o de obst\u00e1culos e feedback sonoro  </p>"},{"location":"#modulos-utilizados","title":"\ud83d\udd27 M\u00f3dulos Utilizados","text":"<p> \ud83d\udee0\ufe0f M\u00f3dulo \ud83d\udccc Descri\u00e7\u00e3o \ud83d\udd0d Figura Sensor Ultrass\u00f4nico (HCSR04) Respons\u00e1vel pela detec\u00e7\u00e3o de obst\u00e1culos \u00e0 frente do usu\u00e1rio. Display OLED (SSD1306) Exibe informa\u00e7\u00f5es relevantes, como dist\u00e2ncia at\u00e9 o obst\u00e1culo. Buzzer (MLT8530) Emite sinais sonoros para alertar o usu\u00e1rio sobre obst\u00e1culos detectados. Bot\u00e3o Permite ativar e desativar funcionalidades, como os LEDs de sinaliza\u00e7\u00e3o. Matriz de LEDs RGB 5x5 Exibe padr\u00f5es visuais (bandeira do Brasil) para facilitar a identifica\u00e7\u00e3o do usu\u00e1rio cego por terceiros. Raspberry Pi Pico W Microcontrolador respons\u00e1vel pelo processamento e controle dos perif\u00e9ricos. Fonte de Alimenta\u00e7\u00e3o (Power Bank) Fornece energia ao sistema, garantindo mobilidade e autonomia. </p>"},{"location":"#apresentacao-do-sistema-completo","title":"\ud83d\udd0d Apresenta\u00e7\u00e3o do Sistema Completo","text":"<p>O sistema integra os m\u00f3dulos mencionados para fornecer uma solu\u00e7\u00e3o eficiente de navega\u00e7\u00e3o assistida para pessoas com defici\u00eancia visual.  </p> <p> </p> <p>\ud83c\udfa5 Demonstra\u00e7\u00e3o: Veja como o sistema funciona na pr\u00e1tica!  </p> <p>      Seu navegador n\u00e3o suporta a reprodu\u00e7\u00e3o de v\u00eddeos.    <p></p>"},{"location":"dowload_relatorio/","title":"\ud83d\udcc4 Relat\u00f3rio Geral","text":"<p>Aqui voc\u00ea pode baixar o Relat\u00f3rio Geral consolidado do projeto BR SmartGuia, contendo todas as informa\u00e7\u00f5es essenciais sobre o desenvolvimento do sistema.</p> Relat\u00f3rio Descri\u00e7\u00e3o Download Relat\u00f3rio Geral Documento consolidado contendo todas as informa\u00e7\u00f5es do projeto."},{"location":"Firmware/","title":"\ud83d\udccc Introdu\u00e7\u00e3o ao Firmware","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do firmware do projeto BR SmartGuia! \ud83c\udf89</p> <p>Este firmware foi desenvolvido para o Raspberry Pi Pico, utilizando diversos perif\u00e9ricos, como:</p> <p>\u2705 Matriz de LEDs WS2812B - Controlada via PIO;</p> <p>\u2705 Display OLED SSD1306 - Comunica\u00e7\u00e3o via I2C;</p> <p>\u2705 Sensor Ultrass\u00f4nico HC-SR04 - Para medi\u00e7\u00e3o de dist\u00e2ncia;</p> <p>\u2705 Buzzers - Para alarmes e reprodu\u00e7\u00e3o de m\u00fasicas;</p> <p>\u2705 Bot\u00f5es f\u00edsicos - Para intera\u00e7\u00e3o com os LEDs.</p> <p>A documenta\u00e7\u00e3o desta sess\u00e3o tem como objetivo fornecer um guia detalhado sobre a estrutura, funcionamento e desenvolvimento do firmware. Voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es sobre as bibliotecas utilizadas, API, instala\u00e7\u00e3o e compila\u00e7\u00e3o, al\u00e9m de exemplos pr\u00e1ticos e estrat\u00e9gias de depura\u00e7\u00e3o e testes.</p>"},{"location":"Firmware/#organizacao-da-documentacao","title":"\ud83d\udcc2 Organiza\u00e7\u00e3o da Documenta\u00e7\u00e3o","text":"<p>A documenta\u00e7\u00e3o est\u00e1 organizada da seguinte forma:</p> Se\u00e7\u00e3o Descri\u00e7\u00e3o Ambiente de Desenvolvimento Ferramentas e configura\u00e7\u00f5es necess\u00e1rias para desenvolver o firmware. Estrutura do C\u00f3digo Organiza\u00e7\u00e3o dos arquivos e principais componentes do c\u00f3digo. Bibliotecas Utilizadas Descri\u00e7\u00e3o das bibliotecas utilizadas no projeto. API do Firmware Fun\u00e7\u00f5es principais dispon\u00edveis para uso e integra\u00e7\u00e3o. Instala\u00e7\u00e3o e Compila\u00e7\u00e3o Passos para compilar e rodar o firmware no Raspberry Pi Pico. Exemplos Pr\u00e1ticos Demonstra\u00e7\u00f5es e exemplos de uso do firmware. Depura\u00e7\u00e3o e Testes Estrat\u00e9gias para identificar e corrigir problemas no firmware."},{"location":"Firmware/#tecnologias-utilizadas","title":"\ud83d\ude80 Tecnologias Utilizadas","text":"<ul> <li>Linguagem: C</li> <li>Microcontrolador: Raspberry Pi Pico</li> <li>SDK: Pico SDK</li> <li>Gerenciador de Build: CMake</li> <li>Interfaces de Comunica\u00e7\u00e3o:</li> <li>I2C para o display OLED SSD1306</li> <li>PIO para o controle da matriz de LEDs WS2812B</li> <li>GPIO para sensores ultrass\u00f4nicos e buzzers</li> </ul>"},{"location":"Firmware/#objetivos-do-firmware","title":"\ud83c\udfaf Objetivos do Firmware","text":"<p>O firmware foi projetado para:</p> <ul> <li>Controlar eficientemente os perif\u00e9ricos conectados ao Raspberry Pi Pico.</li> <li>Garantir uma interface interativa e intuitiva atrav\u00e9s de bot\u00f5es f\u00edsicos.</li> <li>Exibir informa\u00e7\u00f5es relevantes no display OLED.</li> <li>Reproduzir sinais sonoros e m\u00fasicas utilizando buzzers.</li> <li>Implementar um sistema responsivo para medi\u00e7\u00e3o de dist\u00e2ncias.</li> </ul> <p>Siga para a pr\u00f3xima se\u00e7\u00e3o para configurar o ambiente de desenvolvimento! \ud83d\udee0\ufe0f</p> <p>\u27a1\ufe0f Ambiente de Desenvolvimento</p>"},{"location":"Firmware/ambiente/","title":"\ud83d\udee0\ufe0f Ambiente de Desenvolvimento","text":"<p>Esta se\u00e7\u00e3o detalha o ambiente necess\u00e1rio para desenvolver, compilar e testar o firmware do projeto BR SmartGuia no Raspberry Pi Pico.</p>"},{"location":"Firmware/ambiente/#requisitos","title":"\ud83d\udccc Requisitos","text":"<p>Antes de iniciar, certifique-se de que possui os seguintes itens:</p>"},{"location":"Firmware/ambiente/#hardware-necessario","title":"\ud83d\udda5\ufe0f Hardware Necess\u00e1rio","text":"Componente Descri\u00e7\u00e3o Raspberry Pi Pico W Microcontrolador principal do projeto Cabo Micro-USB Para alimenta\u00e7\u00e3o e comunica\u00e7\u00e3o com o computador Display OLED SSD1306 Comunica\u00e7\u00e3o via I2C para exibi\u00e7\u00e3o de informa\u00e7\u00f5es Matriz de LEDs WS2812B Controlada via PIO para sinaliza\u00e7\u00e3o visual Buzzer x2 Para alertas sonoros e m\u00fasica Sensor Ultrass\u00f4nico HC-SR04 Para medi\u00e7\u00e3o de dist\u00e2ncia de obst\u00e1culos Bot\u00f5es f\u00edsicos (A/B) Para controle manual da matriz de LEDs"},{"location":"Firmware/ambiente/#software-necessario","title":"\ud83d\udcbb Software Necess\u00e1rio","text":"Ferramenta Descri\u00e7\u00e3o Sistema Operacional Linux (recomendado) ou Windows com WSL SDK do Raspberry Pi Pico Biblioteca e ferramentas para desenvolvimento CMake Gerenciador de build GNU Arm Embedded Toolchain Compilador para ARM Visual Studio Code Editor de c\u00f3digo recomendado Extens\u00e3o Pico SDK para VS Code Facilita a configura\u00e7\u00e3o do ambiente Minicom/PuTTY Monitoramento de sa\u00edda serial"},{"location":"Firmware/ambiente/#configuracao-do-ambiente","title":"\ud83d\udd27 Configura\u00e7\u00e3o do Ambiente","text":""},{"location":"Firmware/ambiente/#1-instalar-dependencias-linux","title":"1\ufe0f\u20e3 Instalar Depend\u00eancias (Linux)","text":"<p>```bash sudo apt update &amp;&amp; sudo apt install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential</p>"},{"location":"Firmware/api/","title":"\ud83d\udd0c API do Firmware","text":"<p>Esta se\u00e7\u00e3o documenta as principais fun\u00e7\u00f5es dispon\u00edveis no firmware BR SmartGuia. Aqui voc\u00ea encontrar\u00e1 detalhes sobre os m\u00e9todos para intera\u00e7\u00e3o com os perif\u00e9ricos e funcionalidades do projeto.</p>"},{"location":"Firmware/api/#visao-geral","title":"\ud83d\udcdc Vis\u00e3o Geral","text":"<p>A API do firmware est\u00e1 organizada conforme os componentes principais do sistema:</p> <ul> <li>Matriz de LEDs WS2812B \ud83c\udfa8</li> <li>Display OLED SSD1306 \ud83d\udcdf</li> <li>Sensor Ultrass\u00f4nico HC-SR04 \ud83d\udce1</li> <li>Buzzers \ud83d\udd0a</li> <li>Bot\u00f5es f\u00edsicos \ud83c\udf9b\ufe0f</li> </ul>"},{"location":"Firmware/api/#controle-da-matriz-de-leds","title":"\ud83c\udfa8 Controle da Matriz de LEDs","text":"<pre><code>void ws2812b_init(uint pin);\n</code></pre> <p>Descri\u00e7\u00e3o: Inicializa a m\u00e1quina de estado PIO para controlar a matriz de LEDs WS2812B.</p> <pre><code>void ws2812b_setLED(uint index, uint8_t r, uint8_t g, uint8_t b, float brightness);\n</code></pre> <p>Descri\u00e7\u00e3o: Define a cor e o brilho de um LED espec\u00edfico na matriz.</p> <pre><code>void ws2812b_clear();\n</code></pre> <p>Descri\u00e7\u00e3o: Desliga todos os LEDs da matriz.</p> <pre><code>void ws2812b_write();\n</code></pre> <p>Descri\u00e7\u00e3o: Envia os dados para atualizar os LEDs da matriz.</p>"},{"location":"Firmware/api/#controle-do-display-oled-ssd1306","title":"\ud83d\udcdf Controle do Display OLED SSD1306","text":"<pre><code>void ssd1306_init();\n</code></pre> <p>Descri\u00e7\u00e3o: Inicializa o display OLED via comunica\u00e7\u00e3o I2C.</p> <pre><code>void ssd1306_render(uint8_t *buf, struct render_area *area);\n</code></pre> <p>Descri\u00e7\u00e3o: Atualiza uma \u00e1rea espec\u00edfica do display com um buffer de pixels.</p> <pre><code>void ssd1306_writeString(uint8_t *buf, int16_t x, int16_t y, char *str);\n</code></pre> <p>Descri\u00e7\u00e3o: Escreve uma string na posi\u00e7\u00e3o <code>(x, y)</code> da tela.</p>"},{"location":"Firmware/api/#sensor-ultrassonico-hc-sr04","title":"\ud83d\udce1 Sensor Ultrass\u00f4nico HC-SR04","text":"<pre><code>float hcsr04_measure();\n</code></pre> <p>Descri\u00e7\u00e3o: Mede a dist\u00e2ncia em cent\u00edmetros usando um sensor ultrass\u00f4nico HC-SR04.</p>"},{"location":"Firmware/api/#controle-do-buzzer","title":"\ud83d\udd0a Controle do Buzzer","text":"<pre><code>void buzzer_play_tone(int frequency, int duration, int buzzer_pin);\n</code></pre> <p>Descri\u00e7\u00e3o: Toca uma frequ\u00eancia espec\u00edfica no buzzer por um tempo determinado.</p> <pre><code>void buzzer_playAlarm();\n</code></pre> <p>Descri\u00e7\u00e3o: Emite um som de alarme pr\u00e9-definido no buzzer.</p>"},{"location":"Firmware/api/#interacao-com-botoes","title":"\ud83c\udf9b\ufe0f Intera\u00e7\u00e3o com Bot\u00f5es","text":"<pre><code>bool button_read(uint button_pin);\n</code></pre> <p>Descri\u00e7\u00e3o: Retorna <code>true</code> se um bot\u00e3o estiver pressionado.</p> <p>Agora que entendemos a API do firmware, podemos seguir para a pr\u00f3xima se\u00e7\u00e3o sobre instala\u00e7\u00e3o e compila\u00e7\u00e3o! \ud83d\udee0\ufe0f</p> <p>\u27a1\ufe0f Instala\u00e7\u00e3o e Compila\u00e7\u00e3o</p>"},{"location":"Firmware/bibliotecas/","title":"\ud83d\udcda Bibliotecas Utilizadas","text":"<p>O firmware BR SmartGuia faz uso de diversas bibliotecas para interagir com os perif\u00e9ricos e otimizar o desenvolvimento. Abaixo, detalhamos as principais bibliotecas utilizadas no projeto.</p>"},{"location":"Firmware/bibliotecas/#bibliotecas-do-raspberry-pi-pico-sdk","title":"\ud83d\udd0c Bibliotecas do Raspberry Pi Pico SDK","text":"<p>O Raspberry Pi Pico SDK fornece suporte para a programa\u00e7\u00e3o do microcontrolador RP2040.</p> Biblioteca Descri\u00e7\u00e3o <code>pico/stdlib.h</code> Fornece fun\u00e7\u00f5es b\u00e1sicas para entrada/sa\u00edda, temporiza\u00e7\u00e3o e controle de GPIO. <code>pico/binary_info.h</code> Permite armazenar metadados sobre o firmware, \u00fatil para depura\u00e7\u00e3o. <code>hardware/gpio.h</code> Controle dos pinos GPIO. <code>hardware/i2c.h</code> Comunica\u00e7\u00e3o com dispositivos via protocolo I2C. <code>hardware/pwm.h</code> Controle de PWM para os buzzers. <code>hardware/pio.h</code> Configura\u00e7\u00e3o e controle da matriz de LEDs WS2812B. <code>hardware/clocks.h</code> Configura\u00e7\u00e3o e gerenciamento de clocks do sistema."},{"location":"Firmware/bibliotecas/#bibliotecas-para-perifericos","title":"\ud83d\udcdf Bibliotecas para Perif\u00e9ricos","text":"<p>O firmware utiliza drivers customizados para interagir com os perif\u00e9ricos. Abaixo, listamos as bibliotecas espec\u00edficas:</p> Biblioteca Fun\u00e7\u00e3o <code>ssd1306_i2c.h</code> Driver para controle do display OLED SSD1306 via I2C. <code>ssd1306_font.h</code> Defini\u00e7\u00f5es de fonte para exibi\u00e7\u00e3o de caracteres no display. <code>ws2812b.pio.h</code> C\u00f3digo PIO para controle da matriz de LEDs WS2812B."},{"location":"Firmware/bibliotecas/#dependencias-do-projeto","title":"\ud83d\udd04 Depend\u00eancias do Projeto","text":"<p>O projeto utiliza ferramentas externas para compilar e gerenciar o firmware:</p> Ferramenta Descri\u00e7\u00e3o CMake Gerenciador de build utilizado para compilar o c\u00f3digo. GNU Arm Embedded Toolchain Toolchain para compila\u00e7\u00e3o de c\u00f3digo C/C++ para o RP2040."},{"location":"Firmware/bibliotecas/#como-as-bibliotecas-se-integram-no-projeto","title":"\ud83d\udccc Como as Bibliotecas se Integram no Projeto","text":"<ol> <li>O Pico SDK \u00e9 inicializado no <code>CMakeLists.txt</code>, garantindo que as bibliotecas essenciais estejam dispon\u00edveis.</li> <li>As bibliotecas de hardware (<code>gpio</code>, <code>i2c</code>, <code>pwm</code>, <code>pio</code>) s\u00e3o usadas para interagir com os sensores e atuadores.</li> <li>Os drivers personalizados para o display OLED, matriz de LEDs e buzzers garantem um controle eficiente dos perif\u00e9ricos.</li> <li>O c\u00f3digo principal realiza a integra\u00e7\u00e3o entre essas bibliotecas, garantindo que os componentes trabalhem juntos de forma sincronizada.</li> </ol> <p>Agora que conhecemos as bibliotecas utilizadas, siga para a pr\u00f3xima se\u00e7\u00e3o para entender melhor a API do firmware! \ud83d\udd0d</p> <p>\u27a1\ufe0f API do Firmware</p>"},{"location":"Firmware/depuracao/","title":"\ud83d\udee0\ufe0f Depura\u00e7\u00e3o e Testes","text":"<p>Nesta se\u00e7\u00e3o, exploramos estrat\u00e9gias para identificar e corrigir problemas no firmware BR SmartGuia.</p>"},{"location":"Firmware/depuracao/#metodos-de-depuracao","title":"\ud83d\udd0d M\u00e9todos de Depura\u00e7\u00e3o","text":""},{"location":"Firmware/depuracao/#1-saida-serial-debugging-via-uart","title":"1\ufe0f\u20e3 Sa\u00edda Serial (Debugging via UART)","text":"<p>A sa\u00edda serial \u00e9 uma das maneiras mais eficazes de depura\u00e7\u00e3o. Utilize <code>printf</code> para exibir mensagens no terminal:</p> <pre><code>#include \"pico/stdlib.h\"\n\nint main() {\n    stdio_init_all();\n    printf(\"Iniciando depura\u00e7\u00e3o...\\n\");\n\n    while (true) {\n        printf(\"Firmware rodando...\\n\");\n        sleep_ms(1000);\n    }\n}\n</code></pre> <p>Para visualizar a sa\u00edda:</p> <pre><code>minicom -b 115200 -o -D /dev/ttyUSB0\n</code></pre>"},{"location":"Firmware/depuracao/#2-verificacao-de-estado-dos-gpios","title":"2\ufe0f\u20e3 Verifica\u00e7\u00e3o de Estado dos GPIOs","text":"<p>Para garantir que os pinos GPIO est\u00e3o funcionando corretamente:</p> <pre><code>#include \"hardware/gpio.h\"\n\n#define TEST_PIN 2\n\nint main() {\n    gpio_init(TEST_PIN);\n    gpio_set_dir(TEST_PIN, GPIO_IN);\n\n    while (true) {\n        printf(\"Pino %d: %d\\n\", TEST_PIN, gpio_get(TEST_PIN));\n        sleep_ms(500);\n    }\n}\n</code></pre>"},{"location":"Firmware/depuracao/#3-teste-de-sensores","title":"3\ufe0f\u20e3 Teste de Sensores","text":"<p>Se o sensor ultrass\u00f4nico HC-SR04 n\u00e3o estiver medindo corretamente:</p> <pre><code>float distancia = hcsr04_measure();\nprintf(\"Dist\u00e2ncia medida: %.2f cm\\n\", distancia);\n</code></pre> <p>Caso os valores estejam errados, verifique: - Conex\u00f5es dos pinos TRIGGER e ECHO. - Se h\u00e1 interfer\u00eancia de ru\u00eddo.</p>"},{"location":"Firmware/depuracao/#4-teste-do-display-oled","title":"4\ufe0f\u20e3 Teste do Display OLED","text":"<p>Se o display n\u00e3o exibir nada, tente desenhar um padr\u00e3o simples:</p> <pre><code>uint8_t buf[SSD1306_BUF_LEN];\nmemset(buf, 0xFF, SSD1306_BUF_LEN); // Preenche com pixels acesos\nssd1306_render(buf, &amp;(struct render_area){0, SSD1306_WIDTH-1, 0, SSD1306_NUM_PAGES-1});\n</code></pre> <p>Se continuar sem exibi\u00e7\u00e3o: - Verifique a alimenta\u00e7\u00e3o do display. - Confirme os pinos SDA e SCL. - Teste reduzir a taxa de clock do I2C.</p>"},{"location":"Firmware/depuracao/#checklist-de-testes","title":"\u2705 Checklist de Testes","text":"Componente Teste Matriz de LEDs LEDs acendem e respondem corretamente? Buzzer O som do alarme \u00e9 emitido corretamente? Sensor Ultrass\u00f4nico A dist\u00e2ncia medida est\u00e1 precisa? Display OLED O texto e os gr\u00e1ficos aparecem corretamente? <p>Se algum teste falhar, revise as conex\u00f5es e tente os m\u00e9todos de depura\u00e7\u00e3o mencionados acima.</p>"},{"location":"Firmware/depuracao/#teste-de-bancada","title":"\ud83c\udfa5 Teste de Bancada","text":"<p>Aqui est\u00e1 um v\u00eddeo demonstrando o funcionamento do firmware durante os testes de bancada:</p> <p>      Seu navegador n\u00e3o suporta a reprodu\u00e7\u00e3o de v\u00eddeos.    <p></p>"},{"location":"Firmware/estrutura/","title":"\ud83d\udcc2 Estrutura do C\u00f3digo","text":"<p>Esta se\u00e7\u00e3o descreve a organiza\u00e7\u00e3o do c\u00f3digo-fonte do firmware BR SmartGuia, explicando os principais arquivos e suas fun\u00e7\u00f5es.</p>"},{"location":"Firmware/estrutura/#visao-geral","title":"\ud83d\udccc Vis\u00e3o Geral","text":"<p>O c\u00f3digo do firmware segue uma estrutura modular, facilitando a manuten\u00e7\u00e3o e a escalabilidade. Abaixo est\u00e1 a organiza\u00e7\u00e3o correta dos arquivos principais:</p> <pre><code>\ud83d\udcc1 Firmware/\n\u251c\u2500\u2500 \ud83d\udcc2 build/                 # Diret\u00f3rio gerado ap\u00f3s compila\u00e7\u00e3o\n\u251c\u2500\u2500 \ud83d\udcc4 BatGuia.c              # C\u00f3digo principal do firmware\n\u251c\u2500\u2500 \ud83d\udcc4 CMakeLists.txt         # Configura\u00e7\u00e3o do CMake para compila\u00e7\u00e3o\n\u251c\u2500\u2500 \ud83d\udcc4 pico_sdk_import.cmake  # Importa\u00e7\u00e3o do Pico SDK\n\u251c\u2500\u2500 \ud83d\udcc4 ssd1306.h              # Header com fun\u00e7\u00f5es do OLED\n\u251c\u2500\u2500 \ud83d\udcc4 ssd1306_font.h         # Defini\u00e7\u00f5es da fonte do display\n\u251c\u2500\u2500 \ud83d\udcc4 ssd1306_i2c.c          # Implementa\u00e7\u00e3o do driver do display OLED\n\u251c\u2500\u2500 \ud83d\udcc4 ssd1306_i2c.h          # Header do driver do display OLED\n\u251c\u2500\u2500 \ud83d\udcc4 ws2818b.pio.h          # C\u00f3digo para controle da matriz de LEDs WS2812B via PIO\n\u251c\u2500\u2500 \ud83d\udcc4 ws2818b.pio            # Defini\u00e7\u00e3o do programa PIO para controle dos LEDs\n</code></pre>"},{"location":"Firmware/estrutura/#descricao-dos-arquivos","title":"\ud83d\udcdd Descri\u00e7\u00e3o dos Arquivos","text":"Arquivo Descri\u00e7\u00e3o <code>CMakeLists.txt</code> Define a estrutura do projeto e os arquivos necess\u00e1rios para a compila\u00e7\u00e3o. <code>pico_sdk_import.cmake</code> Importa o SDK do Raspberry Pi Pico. <code>BatGuia.c</code> Arquivo principal, contendo a l\u00f3gica do firmware. <code>ssd1306_i2c.c</code> Implementa\u00e7\u00e3o das fun\u00e7\u00f5es para comunica\u00e7\u00e3o com o display OLED via I2C. <code>ssd1306_i2c.h</code> Header do driver do display OLED, definindo as fun\u00e7\u00f5es e constantes. <code>ws2818b.pio.h</code> Configura\u00e7\u00e3o para o controle da matriz de LEDs WS2812B via PIO. <code>ws2818b.pio</code> C\u00f3digo PIO para controlar os LEDs de forma eficiente. <code>ssd1306_font.h</code> Defini\u00e7\u00f5es das fontes utilizadas no display OLED. <code>ssd1306.h</code> Header com as principais fun\u00e7\u00f5es de exibi\u00e7\u00e3o para o OLED."},{"location":"Firmware/estrutura/#fluxo-de-execucao-do-firmware","title":"\ud83d\udd04 Fluxo de Execu\u00e7\u00e3o do Firmware","text":"<ol> <li> <p>Inicializa\u00e7\u00e3o \ud83d\ude80</p> </li> <li> <p>Configura\u00e7\u00e3o dos perif\u00e9ricos (I2C, GPIO, PIO, PWM).</p> </li> <li>Inicializa\u00e7\u00e3o do display OLED e matriz de LEDs.</li> <li> <p>Configura\u00e7\u00e3o dos bot\u00f5es e sensores ultrass\u00f4nicos HC-SR04.</p> </li> <li> <p>Loop Principal \ud83d\udd04</p> </li> <li> <p>Leitura do sensor ultrass\u00f4nico para medir dist\u00e2ncia.</p> </li> <li>Controle da matriz de LEDs com base na intera\u00e7\u00e3o dos bot\u00f5es.</li> <li>Exibi\u00e7\u00e3o de informa\u00e7\u00f5es no display OLED.</li> <li> <p>Emiss\u00e3o de sons de alerta via buzzer.</p> </li> <li> <p>Respostas a Eventos \ud83c\udfad</p> </li> <li> <p>Se um bot\u00e3o for pressionado, a matriz de LEDs acende ou apaga.</p> </li> <li>Se a dist\u00e2ncia medida for menor que um valor cr\u00edtico, o buzzer toca um alarme.</li> <li>O display OLED exibe informa\u00e7\u00f5es atualizadas continuamente.</li> </ol> <p>Agora que voc\u00ea conhece a estrutura do c\u00f3digo, siga para a pr\u00f3xima se\u00e7\u00e3o para explorar as bibliotecas utilizadas! \ud83d\udcda</p> <p>\u27a1\ufe0f Bibliotecas Utilizadas</p>"},{"location":"Firmware/exemplos/","title":"\ud83d\udcd6 Exemplos Pr\u00e1ticos","text":"<p>Esta se\u00e7\u00e3o apresenta exemplos pr\u00e1ticos de uso do firmware BR SmartGuia para facilitar o desenvolvimento e testes.</p>"},{"location":"Firmware/exemplos/#acendendo-a-matriz-de-leds","title":"\ud83d\udfe2 Acendendo a Matriz de LEDs","text":"<p>Este exemplo mostra como inicializar e configurar a matriz de LEDs WS2812B.</p> <pre><code>#include \"ws2818b.pio.h\"\n\nint main() {\n    ws2812b_init(7); // Inicializa a matriz de LEDs no pino 7\n\n    for (int i = 0; i &lt; 25; i++) {\n        ws2812b_setLED(i, 255, 0, 0, 0.5); // Acende os LEDs em vermelho\n    }\n    ws2812b_write(); // Atualiza a matriz de LEDs\n\n    while (true);\n}\n</code></pre>"},{"location":"Firmware/exemplos/#exibindo-texto-no-display-oled","title":"\ud83d\udcdf Exibindo Texto no Display OLED","text":"<p>Este exemplo exibe uma mensagem no display OLED SSD1306 via I2C.</p> <pre><code>#include \"ssd1306.h\"\n\nint main() {\n    ssd1306_init();\n    uint8_t buf[SSD1306_BUF_LEN];\n    memset(buf, 0, SSD1306_BUF_LEN);\n\n    ssd1306_writeString(buf, 5, 10, \"Hello, BR SmartGuia!\");\n    ssd1306_render(buf, &amp;(struct render_area){0, SSD1306_WIDTH-1, 0, SSD1306_NUM_PAGES-1});\n\n    while (true);\n}\n</code></pre>"},{"location":"Firmware/exemplos/#medindo-distancia-com-sensor-ultrassonico","title":"\ud83d\udce1 Medindo Dist\u00e2ncia com Sensor Ultrass\u00f4nico","text":"<p>Este exemplo mostra como obter a dist\u00e2ncia medida pelo sensor ultrass\u00f4nico HC-SR04.</p> <pre><code>#include \"hardware/gpio.h\"\n#include \"pico/stdlib.h\"\n\n#define TRIGGER_PIN 4\n#define ECHO_PIN 9\n\nint main() {\n    stdio_init_all();\n    gpio_init(TRIGGER_PIN);\n    gpio_set_dir(TRIGGER_PIN, GPIO_OUT);\n    gpio_init(ECHO_PIN);\n    gpio_set_dir(ECHO_PIN, GPIO_IN);\n\n    while (true) {\n        float distance = hcsr04_measure();\n        printf(\"Dist\u00e2ncia: %.2f cm\\n\", distance);\n        sleep_ms(500);\n    }\n}\n</code></pre>"},{"location":"Firmware/exemplos/#tocando-um-alarme","title":"\ud83d\udd0a Tocando um Alarme","text":"<p>Este exemplo ativa um som de alerta com o buzzer.</p> <pre><code>#include \"hardware/pwm.h\"\n\n#define BUZZER_PIN 10\n\nint main() {\n    buzzer_playAlarm();\n    while (true);\n}\n</code></pre> <p>Agora que voc\u00ea viu exemplos pr\u00e1ticos, siga para a pr\u00f3xima se\u00e7\u00e3o sobre depura\u00e7\u00e3o e testes! \ud83d\udee0\ufe0f</p> <p>\u27a1\ufe0f Depura\u00e7\u00e3o e Testes</p>"},{"location":"Firmware/instalacao/","title":"\ud83d\udee0\ufe0f Instala\u00e7\u00e3o e Compila\u00e7\u00e3o","text":"<p>Esta se\u00e7\u00e3o fornece um guia passo a passo para configurar, compilar e carregar o firmware BR SmartGuia no Raspberry Pi Pico.</p>"},{"location":"Firmware/instalacao/#pre-requisitos","title":"\ud83d\udce5 Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, certifique-se de que possui os seguintes itens instalados:</p> Requisito Descri\u00e7\u00e3o Raspberry Pi Pico SDK Biblioteca necess\u00e1ria para desenvolver no RP2040. CMake Ferramenta para gerar os arquivos de build. GNU Arm Embedded Toolchain Compilador para ARM. VS Code (Opcional) Editor de c\u00f3digo recomendado."},{"location":"Firmware/instalacao/#passos-para-compilar-o-firmware","title":"\ud83d\ude80 Passos para Compilar o Firmware","text":""},{"location":"Firmware/instalacao/#1-clonar-o-repositorio","title":"1\ufe0f\u20e3 Clonar o Reposit\u00f3rio","text":"<pre><code>git clone &lt;seu-repositorio&gt;\ncd &lt;seu-repositorio&gt;\n</code></pre>"},{"location":"Firmware/instalacao/#2-configurar-o-sdk-do-pico","title":"2\ufe0f\u20e3 Configurar o SDK do Pico","text":"<pre><code>export PICO_SDK_PATH=~/pico-sdk\n</code></pre> <p>\ud83d\udca1 Dica: Adicione essa linha ao <code>~/.bashrc</code> para evitar reconfigurar a cada sess\u00e3o.</p>"},{"location":"Firmware/instalacao/#3-criar-o-diretorio-de-build","title":"3\ufe0f\u20e3 Criar o Diret\u00f3rio de Build","text":"<pre><code>mkdir build\ncd build\n</code></pre>"},{"location":"Firmware/instalacao/#4-gerar-os-arquivos-de-compilacao","title":"4\ufe0f\u20e3 Gerar os Arquivos de Compila\u00e7\u00e3o","text":"<pre><code>cmake ..\n</code></pre>"},{"location":"Firmware/instalacao/#5-compilar-o-codigo","title":"5\ufe0f\u20e3 Compilar o C\u00f3digo","text":"<pre><code>make -j$(nproc)\n</code></pre> <p>Ap\u00f3s a conclus\u00e3o, o firmware compilado estar\u00e1 dispon\u00edvel no arquivo <code>.uf2</code> dentro da pasta <code>build</code>.</p>"},{"location":"Firmware/instalacao/#carregar-o-firmware-no-raspberry-pi-pico","title":"\ud83d\udd04 Carregar o Firmware no Raspberry Pi Pico","text":"<ol> <li>Conecte o Raspberry Pi Pico ao seu computador enquanto segura o bot\u00e3o BOOTSEL.</li> <li>Ele aparecer\u00e1 como um dispositivo de armazenamento USB.</li> <li>Copie o arquivo <code>.uf2</code> gerado para esse dispositivo:</li> </ol> <p><code>bash    cp firmware.uf2 /media/$USER/RPI-RP2/</code></p> <ol> <li>O Pico ser\u00e1 reiniciado automaticamente e o firmware estar\u00e1 rodando! \ud83c\udf89</li> </ol>"},{"location":"Firmware/instalacao/#testando-o-firmware","title":"\ud83d\udcdf Testando o Firmware","text":"<p>Para verificar a sa\u00edda serial do Raspberry Pi Pico:</p> <pre><code>minicom -b 115200 -o -D /dev/ttyUSB0\n</code></pre> <p>Ou, no Windows, utilize PuTTY e conecte \u00e0 porta COM correta com baud rate 115200.</p> <p>Agora que o firmware est\u00e1 instalado, siga para os exemplos pr\u00e1ticos! \ud83d\udcd6</p> <p>\u27a1\ufe0f Exemplos Pr\u00e1ticos</p>"},{"location":"Integracao/v1/","title":"Vers\u00e3o 1: ultrassonico","text":""},{"location":"Integracao/v2/","title":"Versao 2","text":""},{"location":"Integracao/v3/","title":"Versao 3","text":""},{"location":"Modulos/botao/","title":"\ud83d\udd18 Bot\u00e3o","text":"<p>O bot\u00e3o f\u00edsico no BR SmartGuia permite ao usu\u00e1rio interagir diretamente com o sistema, ativando ou desativando fun\u00e7\u00f5es importantes. Ele desempenha um papel essencial na navega\u00e7\u00e3o do carrinho, garantindo maior controle e personaliza\u00e7\u00e3o da experi\u00eancia.  </p>"},{"location":"Modulos/botao/#1-o-que-e-esse-modulo","title":"\ud83d\udccc 1. O que \u00e9 esse m\u00f3dulo?","text":"<p>O bot\u00e3o \u00e9 um interruptor moment\u00e2neo que, ao ser pressionado, envia um sinal ao Raspberry Pi Pico W, acionando ou desativando funcionalidades do sistema.  </p> <p>\u2705 F\u00e1cil de usar \ud83d\uddb2 \u2705 Baixo consumo de energia \ud83d\udd0b \u2705 R\u00e1pida resposta ao toque \u26a1  </p> <p>Esse bot\u00e3o aumenta a interatividade e acessibilidade, permitindo que o usu\u00e1rio tenha controle direto sobre alertas visuais e sonoros do BR SmartGuia.  </p>"},{"location":"Modulos/botao/#2-como-ele-funciona","title":"\u2699\ufe0f 2. Como ele funciona?","text":"<p>O bot\u00e3o f\u00edsico opera como um interruptor eletr\u00f4nico, funcionando com um sistema de pulso el\u00e9trico:  </p> <p>\ud83d\uddb1 Fluxo de funcionamento do bot\u00e3o: 1\ufe0f\u20e3 O usu\u00e1rio pressiona o bot\u00e3o, fechando o circuito. 2\ufe0f\u20e3 O Raspberry Pi Pico W detecta o sinal de ativa\u00e7\u00e3o. 3\ufe0f\u20e3 O sistema aciona ou desativa uma funcionalidade. 4\ufe0f\u20e3 O display OLED pode exibir um feedback visual.  </p> <p>\ud83d\udca1 Modo de funcionamento: \u2714 Quando pressionado, o circuito fecha e envia um sinal HIGH. \u2714 Quando solto, o circuito abre e o sinal retorna a LOW. \u2714 O c\u00f3digo do BR SmartGuia pode detectar longos ou curtos pressionamentos para diferentes fun\u00e7\u00f5es.  </p>"},{"location":"Modulos/botao/#3-qual-o-papel-dele-no-br-smartguia","title":"\ud83c\udfaf 3. Qual o papel dele no BR SmartGuia?","text":"<p>No BR SmartGuia, os bot\u00f5es permitem controle manual de algumas fun\u00e7\u00f5es essenciais.  </p> <p>\ud83d\udd18 Fun\u00e7\u00f5es do bot\u00e3o no sistema: \u2705 Ativar/desativar os LEDs de sinaliza\u00e7\u00e3o \ud83d\udca1 \u2705 Ligar ou silenciar o buzzer de alerta \ud83d\udd0a \u2705 Resetar ou pausar fun\u00e7\u00f5es temporariamente \ud83d\udd04  </p> <p>\ud83d\udccc Exemplo de uso: \ud83d\udd39 O usu\u00e1rio pode desligar os LEDs caso n\u00e3o precise de sinaliza\u00e7\u00e3o extra. \ud83d\udd39 Se estiver em um ambiente silencioso, pode desativar os alertas sonoros. \ud83d\udd39 Permite reconfigurar o carrinho sem precisar reinici\u00e1-lo completamente.  </p>"},{"location":"Modulos/botao/#4-como-ele-interage-com-os-outros-modulos","title":"\ud83d\udd04 4. Como ele interage com os outros m\u00f3dulos?","text":"<p>O bot\u00e3o funciona em conjunto com os outros m\u00f3dulos do BR SmartGuia para permitir controle manual das fun\u00e7\u00f5es.  </p> \ud83d\udd17 M\u00f3dulo \ud83d\udee0 Intera\u00e7\u00e3o com o bot\u00e3o Matriz de LEDs RGB 5x5 Ativa/desativa os LEDs de sinaliza\u00e7\u00e3o. \ud83d\udca1 Buzzer (MLT8530) Liga/desliga alertas sonoros. \ud83d\udd0a Display OLED (SSD1306) Pode exibir um feedback visual quando pressionado. \ud83d\udcdf Raspberry Pi Pico W Processa os sinais do bot\u00e3o e executa a\u00e7\u00f5es. \ud83d\udda5 <p>\ud83d\udccc Fluxo de funcionamento do bot\u00e3o: 1\ufe0f\u20e3 O usu\u00e1rio pressiona o bot\u00e3o para ativar/desativar uma fun\u00e7\u00e3o. 2\ufe0f\u20e3 O Raspberry Pi Pico W interpreta o sinal e executa a a\u00e7\u00e3o. 3\ufe0f\u20e3 O sistema atualiza os LEDs, buzzer ou exibi\u00e7\u00e3o no display. 4\ufe0f\u20e3 Se necess\u00e1rio, o bot\u00e3o pode redefinir uma configura\u00e7\u00e3o tempor\u00e1ria.  </p>"},{"location":"Modulos/botao/#resumo-do-botao-no-br-smartguia","title":"\ud83d\ude80 Resumo do Bot\u00e3o no BR SmartGuia","text":"<p>\u2705 Oferece controle manual das funcionalidades \ud83d\uddb2 \u2705 Ativa/desativa LEDs e alertas sonoros \ud83d\udca1\ud83d\udd0a \u2705 Simples, eficiente e de f\u00e1cil integra\u00e7\u00e3o \u26a1 \u2705 Melhora a experi\u00eancia do usu\u00e1rio, permitindo personaliza\u00e7\u00e3o \ud83c\udf9b  </p> <p>Com esse bot\u00e3o, o BR SmartGuia se torna mais interativo, permitindo que o usu\u00e1rio tenha controle sobre os alertas visuais e sonoros, tornando a navega\u00e7\u00e3o mais confort\u00e1vel e adapt\u00e1vel! \ud83d\ude80\ud83d\udd18 </p>"},{"location":"Modulos/buzzer/","title":"\ud83d\udd0a Buzzer (MLT8530)","text":"<p>O Buzzer MLT8530 \u00e9 um componente essencial do BR SmartGuia, respons\u00e1vel por emitir sinais sonoros para alertar o usu\u00e1rio sobre a presen\u00e7a de obst\u00e1culos. Ele trabalha em conjunto com o Sensor Ultrass\u00f4nico HC-SR04, garantindo que o usu\u00e1rio receba um feedback auditivo imediato para uma navega\u00e7\u00e3o segura.  </p>"},{"location":"Modulos/buzzer/#1-o-que-e-esse-modulo","title":"\ud83d\udccc 1. O que \u00e9 esse m\u00f3dulo?","text":"<p>O MLT8530 \u00e9 um buzzer piezoel\u00e9trico que converte sinais el\u00e9tricos em som aud\u00edvel. Ele \u00e9 amplamente utilizado em sistemas embarcados devido a suas vantagens:  </p> <p>\u2705 Consome pouca energia \ud83d\udd0b \u2705 F\u00e1cil de integrar com microcontroladores \ud83d\udda5 \u2705 Pode gerar sons de diferentes frequ\u00eancias \ud83d\udd0a  </p> <p>Esse componente \u00e9 fundamental para acessibilidade, pois fornece alertas sonoros instant\u00e2neos, especialmente \u00fateis para usu\u00e1rios com defici\u00eancia visual.  </p>"},{"location":"Modulos/buzzer/#2-como-ele-funciona","title":"\u2699\ufe0f 2. Como ele funciona?","text":"<p>O buzzer piezoel\u00e9trico funciona a partir de pulsos el\u00e9tricos que fazem com que um disco cer\u00e2mico vibre, gerando som.  </p> <p>\ud83d\udce2 Fluxo de funcionamento do Buzzer MLT8530: 1\ufe0f\u20e3 O Raspberry Pi Pico W envia um sinal de frequ\u00eancia vari\u00e1vel. 2\ufe0f\u20e3 O buzzer vibra, transformando o sinal el\u00e9trico em som. 3\ufe0f\u20e3 O som emitido varia de acordo com o alerta necess\u00e1rio.  </p> <p>\ud83d\udca1 Principais caracter\u00edsticas: \u2714 Tens\u00e3o de opera\u00e7\u00e3o: 3V a 5V \u2714 Frequ\u00eancia de opera\u00e7\u00e3o: ~4kHz \u2714 Modo ativo, n\u00e3o precisa de circuito externo </p>"},{"location":"Modulos/buzzer/#3-qual-o-papel-dele-no-br-smartguia","title":"\ud83c\udfaf 3. Qual o papel dele no BR SmartGuia?","text":"<p>O Buzzer MLT8530 \u00e9 um dos principais meios de comunica\u00e7\u00e3o do sistema. Ele permite que o usu\u00e1rio receba alertas sonoros sobre obst\u00e1culos e outros avisos importantes.  </p> <p>\ud83d\udd0a Fun\u00e7\u00f5es do buzzer no BR SmartGuia: \u2705 Emite alerta quando h\u00e1 um obst\u00e1culo pr\u00f3ximo (\u2264 15 cm). \u2705 Diferentes padr\u00f5es sonoros para indicar diferentes situa\u00e7\u00f5es. \u2705 Auxilia usu\u00e1rios com defici\u00eancia visual na navega\u00e7\u00e3o. </p> <p>\ud83d\udce2 O som do buzzer aumenta conforme a proximidade do obst\u00e1culo, tornando a experi\u00eancia intuitiva para o usu\u00e1rio.  </p>"},{"location":"Modulos/buzzer/#4-como-ele-interage-com-os-outros-modulos","title":"\ud83d\udd04 4. Como ele interage com os outros m\u00f3dulos?","text":"<p>O Buzzer MLT8530 trabalha em conjunto com outros m\u00f3dulos para fornecer uma experi\u00eancia integrada e acess\u00edvel.  </p> \ud83d\udd17 M\u00f3dulo \ud83d\udee0 Intera\u00e7\u00e3o com o Buzzer Sensor Ultrass\u00f4nico (HC-SR04) Ativa o buzzer quando um obst\u00e1culo \u00e9 detectado. \ud83d\udccf Display OLED (SSD1306) Exibe informa\u00e7\u00f5es enquanto o buzzer alerta o usu\u00e1rio. \ud83d\udcdf Matriz de LEDs RGB 5x5 Trabalha em conjunto para sinaliza\u00e7\u00e3o visual. \ud83d\udca1 Bot\u00f5es (A e B) Permitem ao usu\u00e1rio ativar/desativar alertas sonoros. \ud83c\udf9b Raspberry Pi Pico W Controla a ativa\u00e7\u00e3o do buzzer conforme os sensores. \ud83d\udda5 <p>\ud83d\udccc Fluxo de funcionamento do buzzer: 1\ufe0f\u20e3 O HC-SR04 detecta um obst\u00e1culo pr\u00f3ximo. 2\ufe0f\u20e3 O Raspberry Pi Pico W processa os dados e aciona o buzzer. 3\ufe0f\u20e3 O Buzzer emite um alerta sonoro baseado na proximidade do obst\u00e1culo. 4\ufe0f\u20e3 O Display OLED exibe informa\u00e7\u00f5es sobre a dist\u00e2ncia do objeto. 5\ufe0f\u20e3 Se necess\u00e1rio, os LEDs piscam para refor\u00e7ar o alerta visualmente.  </p>"},{"location":"Modulos/buzzer/#resumo-do-buzzer-mlt8530-no-br-smartguia","title":"\ud83d\ude80 Resumo do Buzzer MLT8530 no BR SmartGuia","text":"<p>\u2705 Fornece alertas sonoros para navega\u00e7\u00e3o segura \ud83d\udd0a \u2705 Baixo consumo de energia e f\u00e1cil integra\u00e7\u00e3o \u26a1 \u2705 Trabalha em conjunto com sensores e LEDs \ud83d\udca1 \u2705 Crucial para acessibilidade de usu\u00e1rios com defici\u00eancia visual \ud83e\uddaf  </p> <p>Com esse buzzer, o BR SmartGuia garante que os usu\u00e1rios recebam alertas instant\u00e2neos, promovendo uma navega\u00e7\u00e3o segura e eficiente! \ud83d\ude80\ud83d\udd0a  </p>"},{"location":"Modulos/matriz/","title":"\ud83d\udca1 Matriz de LEDs RGB 5x5","text":"<p>A Matriz de LEDs RGB 5x5 \u00e9 um m\u00f3dulo visual utilizado no BR SmartGuia para fornecer sinaliza\u00e7\u00e3o luminosa, aumentando a seguran\u00e7a e a acessibilidade do usu\u00e1rio. Com esse componente, \u00e9 poss\u00edvel exibir padr\u00f5es visuais, como a bandeira do Brasil, para alertar terceiros sobre a presen\u00e7a do carrinho.  </p>"},{"location":"Modulos/matriz/#1-o-que-e-esse-modulo","title":"\ud83d\udccc 1. O que \u00e9 esse m\u00f3dulo?","text":"<p>A Matriz de LEDs RGB 5x5 \u00e9 um display formado por 25 LEDs RGB, organizados em uma grade de 5 colunas por 5 linhas. Cada LED pode exibir diferentes cores, permitindo criar padr\u00f5es visuais din\u00e2micos.  </p> <p>\u2705 Baixo consumo de energia \ud83d\udd0b \u2705 Pode exibir m\u00faltiplas cores \ud83c\udfa8 \u2705 Alto brilho e excelente visibilidade \ud83c\udf1f  </p> <p>Essa matriz \u00e9 muito utilizada em sinaliza\u00e7\u00e3o eletr\u00f4nica e projetos embarcados, pois permite exibir informa\u00e7\u00f5es de forma r\u00e1pida e intuitiva.  </p>"},{"location":"Modulos/matriz/#2-como-ela-funciona","title":"\u2699\ufe0f 2. Como ela funciona?","text":"<p>A matriz funciona atrav\u00e9s de endere\u00e7amento de linhas e colunas, onde os LEDs s\u00e3o acionados individualmente atrav\u00e9s de sinais el\u00e9tricos.  </p> <p>\ud83d\udce2 Fluxo de funcionamento da Matriz de LEDs: 1\ufe0f\u20e3 O Raspberry Pi Pico W envia comandos para ativar certos LEDs. 2\ufe0f\u20e3 Os LEDs acendem, formando padr\u00f5es visuais definidos no c\u00f3digo. 3\ufe0f\u20e3 O usu\u00e1rio pode ativar/desativar a matriz utilizando o bot\u00e3o f\u00edsico.  </p> <p>\ud83d\udca1 Principais caracter\u00edsticas: \u2714 25 LEDs RGB de alta intensidade \u2714 Control\u00e1vel via sinais digitais \u2714 Permite criar anima\u00e7\u00f5es e padr\u00f5es din\u00e2micos </p>"},{"location":"Modulos/matriz/#3-qual-o-papel-dela-no-br-smartguia","title":"\ud83c\udfaf 3. Qual o papel dela no BR SmartGuia?","text":"<p>A Matriz de LEDs RGB 5x5 tem um papel fundamental na sinaliza\u00e7\u00e3o do BR SmartGuia, ajudando a alertar terceiros sobre a presen\u00e7a do usu\u00e1rio.  </p> <p>\ud83d\udca1 Fun\u00e7\u00f5es da matriz no sistema: \u2705 Exibe padr\u00f5es visuais para melhorar a visibilidade do carrinho \ud83d\udea6 \u2705 Mostra a bandeira do Brasil para facilitar identifica\u00e7\u00e3o \ud83c\udde7\ud83c\uddf7 \u2705 Ajuda na navega\u00e7\u00e3o segura em locais escuros ou movimentados \ud83d\udd26  </p> <p>\ud83d\udccc Exemplo de uso: \ud83d\udd39 Quando o ambiente estiver escuro ou movimentado, o usu\u00e1rio pode ativar a matriz para que outras pessoas percebam sua presen\u00e7a. \ud83d\udd39 Caso o carrinho esteja ligado em modo de alerta, os LEDs podem piscar para chamar a aten\u00e7\u00e3o.  </p>"},{"location":"Modulos/matriz/#4-como-ela-interage-com-os-outros-modulos","title":"\ud83d\udd04 4. Como ela interage com os outros m\u00f3dulos?","text":"<p>A Matriz de LEDs RGB 5x5 trabalha em conjunto com os outros m\u00f3dulos para fornecer uma experi\u00eancia acess\u00edvel e segura.  </p> \ud83d\udd17 M\u00f3dulo \ud83d\udee0 Intera\u00e7\u00e3o com a Matriz de LEDs Bot\u00f5es (A e B) Ativam ou desativam os LEDs de sinaliza\u00e7\u00e3o. \ud83c\udf9b Buzzer (MLT8530) Pode piscar em sincronia com os alertas sonoros. \ud83d\udd0a\ud83d\udca1 Display OLED (SSD1306) Informa o status da matriz ao usu\u00e1rio. \ud83d\udcdf Raspberry Pi Pico W Controla os padr\u00f5es visuais exibidos. \ud83d\udda5 <p>\ud83d\udccc Fluxo de funcionamento da matriz: 1\ufe0f\u20e3 O usu\u00e1rio pressiona um bot\u00e3o para ativar/desativar a matriz. 2\ufe0f\u20e3 O Raspberry Pi Pico W processa o comando e aciona os LEDs. 3\ufe0f\u20e3 O display OLED exibe o status da matriz (ativada/desativada). 4\ufe0f\u20e3 Se necess\u00e1rio, os LEDs piscam em sincronia com o buzzer para refor\u00e7ar alertas.  </p>"},{"location":"Modulos/matriz/#resumo-da-matriz-de-leds-rgb-5x5-no-br-smartguia","title":"\ud83d\ude80 Resumo da Matriz de LEDs RGB 5x5 no BR SmartGuia","text":"<p>\u2705 Aumenta a visibilidade e seguran\u00e7a do usu\u00e1rio \ud83d\udca1 \u2705 Permite exibir padr\u00f5es visuais personaliz\u00e1veis \ud83c\udfa8 \u2705 Trabalha em conjunto com buzzer e bot\u00f5es \ud83d\udd0a\ud83c\udf9b \u2705 Baixo consumo de energia e f\u00e1cil integra\u00e7\u00e3o \u26a1  </p> <p>Com essa matriz, o BR SmartGuia se torna mais seguro e vis\u00edvel, garantindo que o usu\u00e1rio seja facilmente notado em ambientes movimentados ou de baixa ilumina\u00e7\u00e3o! \ud83d\ude80\ud83d\udca1  </p>"},{"location":"Modulos/oled/","title":"\ud83d\udcdf Display OLED (SSD1306)","text":"<p>O Display OLED SSD1306 \u00e9 um m\u00f3dulo de exibi\u00e7\u00e3o de informa\u00e7\u00f5es visuais utilizado no BR SmartGuia. Ele permite que o usu\u00e1rio visualize dados importantes em tempo real, como a dist\u00e2ncia do obst\u00e1culo detectado pelo sensor ultrass\u00f4nico.  </p>"},{"location":"Modulos/oled/#1-o-que-e-esse-modulo","title":"\ud83d\udccc 1. O que \u00e9 esse m\u00f3dulo?","text":"<p>O SSD1306 \u00e9 um display gr\u00e1fico OLED (Organic Light-Emitting Diode), amplamente utilizado em projetos embarcados devido a suas vantagens:  </p> <p>\u2705 Baixo consumo de energia \ud83d\udd0b \u2705 Alto contraste e nitidez \ud83c\udf1f \u2705 Funciona sem backlight \ud83d\udca1  </p> <p>Esse display permite exibir textos e gr\u00e1ficos simples, sendo uma interface acess\u00edvel para dispositivos assistivos como o BR SmartGuia.  </p>"},{"location":"Modulos/oled/#2-como-ele-funciona","title":"\u2699\ufe0f 2. Como ele funciona?","text":"<p>O Display OLED SSD1306 utiliza um microcontrolador interno para processar as imagens e textos recebidos via comunica\u00e7\u00e3o I2C ou SPI.  </p> <p>\ud83d\udda5 Fluxo de funcionamento do SSD1306: 1\ufe0f\u20e3 O Raspberry Pi Pico W envia os dados via I2C. 2\ufe0f\u20e3 O SSD1306 processa os comandos recebidos. 3\ufe0f\u20e3 As informa\u00e7\u00f5es s\u00e3o exibidas na tela OLED com alta nitidez.  </p> <p>\ud83d\udca1 Principais caracter\u00edsticas: \u2714 Resolu\u00e7\u00e3o de 128x64 pixels \u2714 Consome apenas 0,08W \u2714 N\u00e3o precisa de luz de fundo (os pixels brilham por si pr\u00f3prios)  </p>"},{"location":"Modulos/oled/#3-qual-o-papel-dele-no-br-smartguia","title":"\ud83c\udfaf 3. Qual o papel dele no BR SmartGuia?","text":"<p>O Display OLED SSD1306 \u00e9 um dos m\u00f3dulos mais importantes do BR SmartGuia, pois exibe informa\u00e7\u00f5es cr\u00edticas para o usu\u00e1rio.  </p> <p>\ud83d\udcdf O que o display exibe? \u2705 A dist\u00e2ncia do obst\u00e1culo detectado pelo Sensor Ultrass\u00f4nico HC-SR04 \ud83d\udccf \u2705 Mensagens de status do carrinho \ud83d\udea6 \u2705 Informa\u00e7\u00f5es de alerta e navega\u00e7\u00e3o \ud83d\udeb6\u200d\u2642\ufe0f  </p> <p>Isso torna o BR SmartGuia mais acess\u00edvel, permitindo que o usu\u00e1rio tenha um feedback visual imediato sobre os obst\u00e1culos ao redor.  </p>"},{"location":"Modulos/oled/#4-como-ele-interage-com-os-outros-modulos","title":"\ud83d\udd04 4. Como ele interage com os outros m\u00f3dulos?","text":"<p>O Display OLED SSD1306 trabalha em conjunto com outros m\u00f3dulos para fornecer uma experi\u00eancia integrada e acess\u00edvel.  </p> \ud83d\udd17 M\u00f3dulo \ud83d\udee0 Intera\u00e7\u00e3o com o SSD1306 Sensor Ultrass\u00f4nico (HC-SR04) Envia a dist\u00e2ncia do obst\u00e1culo para exibi\u00e7\u00e3o. \ud83d\udccf Buzzer (MLT8530) Exibe alertas visuais quando o buzzer emite um som. \ud83d\udd0a Matriz de LEDs RGB 5x5 Trabalha em conjunto para alertar visualmente o ambiente. \ud83d\udca1 Bot\u00f5es (A e B) Permitem ao usu\u00e1rio alternar entre informa\u00e7\u00f5es exibidas. \ud83c\udf9b Raspberry Pi Pico W Controla a comunica\u00e7\u00e3o e os dados do display. \ud83d\udda5 <p>\ud83d\udccc Fluxo de funcionamento do display: 1\ufe0f\u20e3 O HC-SR04 detecta um obst\u00e1culo. 2\ufe0f\u20e3 O Raspberry Pi Pico W processa os dados e envia para o display. 3\ufe0f\u20e3 O Display OLED exibe a dist\u00e2ncia do obst\u00e1culo em tempo real. 4\ufe0f\u20e3 O Buzzer e os LEDs s\u00e3o ativados, caso necess\u00e1rio.  </p>"},{"location":"Modulos/oled/#resumo-do-display-oled-ssd1306-no-br-smartguia","title":"\ud83d\ude80 Resumo do Display OLED SSD1306 no BR SmartGuia","text":"<p>\u2705 Exibi\u00e7\u00e3o clara e de alto contraste para facilitar a leitura. \u2705 Baixo consumo de energia e compatibilidade com I2C. \u2705 Intera\u00e7\u00e3o com sensores e alertas visuais para maior acessibilidade.  </p> <p>Com esse display, o BR SmartGuia fornece informa\u00e7\u00f5es instant\u00e2neas para o usu\u00e1rio, garantindo maior seguran\u00e7a na mobilidade! \ud83d\ude80\ud83d\udcdf </p>"},{"location":"Modulos/pb/","title":"\ud83d\udd0b Fonte de Alimenta\u00e7\u00e3o (Power Bank)","text":"<p>A Fonte de Alimenta\u00e7\u00e3o (Power Bank) \u00e9 a respons\u00e1vel por fornecer energia cont\u00ednua para o funcionamento do BR SmartGuia, garantindo que todos os m\u00f3dulos operem de forma eficiente e confi\u00e1vel.  </p> <p>Por ser um sistema port\u00e1til, o BR SmartGuia precisa de uma fonte de energia compacta e duradoura, permitindo que o usu\u00e1rio utilize o dispositivo sem a necessidade de conex\u00e3o direta \u00e0 rede el\u00e9trica.  </p>"},{"location":"Modulos/pb/#1-o-que-e-esse-modulo","title":"\ud83d\udccc 1. O que \u00e9 esse m\u00f3dulo?","text":"<p>O Power Bank \u00e9 uma bateria recarreg\u00e1vel port\u00e1til, projetada para fornecer energia via USB a dispositivos eletr\u00f4nicos, como smartphones, microcontroladores e sensores.  </p> <p>\u2705 Fornece energia para todos os m\u00f3dulos \ud83d\udd0b \u2705 Port\u00e1til e recarreg\u00e1vel \ud83d\udd04 \u2705 Maior autonomia para o sistema \u23f3  </p> <p>Essa fonte de alimenta\u00e7\u00e3o garante que o BR SmartGuia possa ser utilizado por longos per\u00edodos sem necessidade de recarga imediata.  </p>"},{"location":"Modulos/pb/#2-como-ele-funciona","title":"\u2699\ufe0f 2. Como ele funciona?","text":"<p>O Power Bank possui uma bateria de \u00edons de l\u00edtio que armazena energia e a libera conforme necess\u00e1rio. Ele pode ser conectado ao Raspberry Pi Pico W via cabo USB, garantindo o fornecimento de energia de forma est\u00e1vel.  </p> <p>\ud83d\udce2 Fluxo de funcionamento do Power Bank: 1\ufe0f\u20e3 O usu\u00e1rio carrega o Power Bank antes do uso. 2\ufe0f\u20e3 Ele \u00e9 conectado ao Raspberry Pi Pico W via cabo USB. 3\ufe0f\u20e3 O microcontrolador distribui a energia para os sensores e atuadores. 4\ufe0f\u20e3 Quando a carga acabar, basta recarregar o Power Bank para continuar usando o sistema.  </p> <p>\ud83d\udca1 Principais caracter\u00edsticas: \u2714 Sa\u00edda de 5V e corrente suficiente para alimentar o sistema \u26a1 \u2714 Compat\u00edvel com microcontroladores e sensores \u2714 Prote\u00e7\u00e3o contra curto-circuito e sobrecarga \ud83d\udee1  </p>"},{"location":"Modulos/pb/#3-qual-o-papel-dele-no-br-smartguia","title":"\ud83c\udfaf 3. Qual o papel dele no BR SmartGuia?","text":"<p>A Fonte de Alimenta\u00e7\u00e3o (Power Bank) \u00e9 fundamental para garantir a mobilidade e autonomia do BR SmartGuia.  </p> <p>\ud83d\udd0b Fun\u00e7\u00f5es do Power Bank no sistema: \u2705 Fornece energia para o Raspberry Pi Pico W e demais m\u00f3dulos \u26a1 \u2705 Permite o uso do dispositivo sem conex\u00e3o direta \u00e0 tomada \ud83d\udd04 \u2705 Facilmente recarreg\u00e1vel para longas jornadas de uso \u23f3  </p> <p>\ud83d\udccc Exemplo de uso: \ud83d\udd39 O usu\u00e1rio pode carregar completamente o Power Bank antes de sair de casa e utilizar o BR SmartGuia por v\u00e1rias horas sem precisar recarregar.  </p>"},{"location":"Modulos/pb/#4-como-ele-interage-com-os-outros-modulos","title":"\ud83d\udd04 4. Como ele interage com os outros m\u00f3dulos?","text":"<p>O Power Bank \u00e9 o ponto central de alimenta\u00e7\u00e3o do sistema, garantindo que todos os m\u00f3dulos operem corretamente.  </p> \ud83d\udd17 M\u00f3dulo \ud83d\udee0 Intera\u00e7\u00e3o com o Power Bank Raspberry Pi Pico W Recebe a energia do Power Bank e a distribui para os outros m\u00f3dulos. \ud83d\udda5 Buzzer (MLT8530) Funciona apenas quando h\u00e1 energia suficiente. \ud83d\udd0a Display OLED (SSD1306) Precisa de alimenta\u00e7\u00e3o est\u00e1vel para exibir informa\u00e7\u00f5es corretamente. \ud83d\udcdf Matriz de LEDs RGB 5x5 Consome energia do Power Bank para exibir os padr\u00f5es visuais. \ud83d\udca1 Sensor Ultrass\u00f4nico (HC-SR04) Depende da alimenta\u00e7\u00e3o para medir dist\u00e2ncias e detectar obst\u00e1culos. \ud83d\udccf <p>\ud83d\udccc Fluxo de funcionamento do Power Bank no sistema: 1\ufe0f\u20e3 O usu\u00e1rio liga o BR SmartGuia conectando o Power Bank. 2\ufe0f\u20e3 O Raspberry Pi Pico W recebe energia e distribui para os m\u00f3dulos. 3\ufe0f\u20e3 Todos os sensores e atuadores come\u00e7am a funcionar. 4\ufe0f\u20e3 Quando a bateria estiver fraca, o sistema pode alertar o usu\u00e1rio.  </p>"},{"location":"Modulos/pb/#resumo-da-fonte-de-alimentacao-power-bank-no-br-smartguia","title":"\ud83d\ude80 Resumo da Fonte de Alimenta\u00e7\u00e3o (Power Bank) no BR SmartGuia","text":"<p>\u2705 Garante energia para todos os m\u00f3dulos do sistema \u26a1 \u2705 Permite o uso cont\u00ednuo sem conex\u00e3o el\u00e9trica \ud83d\udd04 \u2705 Facilmente recarreg\u00e1vel para longa autonomia \ud83d\udd0b \u2705 Torna o BR SmartGuia um dispositivo realmente port\u00e1til \ud83d\udeb6\u200d\u2642\ufe0f  </p> <p>Com essa fonte de alimenta\u00e7\u00e3o port\u00e1til, o BR SmartGuia se torna um dispositivo independente e funcional, pronto para auxiliar o usu\u00e1rio em diferentes ambientes! \ud83d\ude80\ud83d\udd0b  </p>"},{"location":"Modulos/rasp/","title":"\ud83d\udda5\ufe0f Raspberry Pi Pico W","text":"<p>O Raspberry Pi Pico W \u00e9 o c\u00e9rebro do BR SmartGuia, sendo respons\u00e1vel por processar os dados dos sensores, ativar os m\u00f3dulos de resposta e garantir a comunica\u00e7\u00e3o entre os componentes. Gra\u00e7as \u00e0 sua conectividade Wi-Fi, ele tamb\u00e9m permite futuras expans\u00f5es do sistema.  </p>"},{"location":"Modulos/rasp/#1-o-que-e-esse-modulo","title":"\ud83d\udccc 1. O que \u00e9 esse m\u00f3dulo?","text":"<p>O Raspberry Pi Pico W \u00e9 um microcontrolador da Raspberry Pi Foundation, baseado no processador RP2040, e voltado para aplica\u00e7\u00f5es embarcadas que exigem baixo consumo de energia e conectividade Wi-Fi.  </p> <p>\u2705 Baixo consumo de energia \ud83d\udd0b \u2705 Wi-Fi integrado para comunica\u00e7\u00e3o remota \ud83d\udcf6 \u2705 Processamento r\u00e1pido e eficiente \u26a1  </p> <p>Esse microcontrolador \u00e9 ideal para dispositivos port\u00e1teis, como o BR SmartGuia, pois permite controlar sensores e atuadores de forma precisa e eficiente.  </p>"},{"location":"Modulos/rasp/#2-como-ele-funciona","title":"\u2699\ufe0f 2. Como ele funciona?","text":"<p>O Raspberry Pi Pico W recebe sinais dos sensores, processa os dados e aciona os m\u00f3dulos necess\u00e1rios. Ele pode tomar decis\u00f5es em tempo real para garantir a seguran\u00e7a e a efici\u00eancia do sistema.  </p> <p>\ud83d\udce2 Fluxo de funcionamento do Raspberry Pi Pico W: 1\ufe0f\u20e3 Recebe os dados do Sensor Ultrass\u00f4nico HC-SR04 \ud83d\udccf 2\ufe0f\u20e3 Processa a dist\u00e2ncia e decide a resposta do sistema \ud83d\udd04 3\ufe0f\u20e3 Ativa o Buzzer e os LEDs se necess\u00e1rio \ud83d\udd0a\ud83d\udca1 4\ufe0f\u20e3 Exibe informa\u00e7\u00f5es no Display OLED SSD1306 \ud83d\udcdf  </p> <p>\ud83d\udca1 Principais caracter\u00edsticas: \u2714 Processador RP2040 (dual-core ARM Cortex-M0+) \u2714 Conectividade Wi-Fi integrada (802.11 b/g/n) \u2714 Baixo consumo de energia e alta efici\u00eancia </p>"},{"location":"Modulos/rasp/#3-qual-o-papel-dele-no-br-smartguia","title":"\ud83c\udfaf 3. Qual o papel dele no BR SmartGuia?","text":"<p>O Raspberry Pi Pico W \u00e9 a unidade central de controle do BR SmartGuia. Ele gerencia todos os m\u00f3dulos e sensores, garantindo um funcionamento integrado.  </p> <p>\ud83d\udda5\ufe0f Fun\u00e7\u00f5es do Raspberry Pi Pico W no sistema: \u2705 L\u00ea os sensores e processa as informa\u00e7\u00f5es \ud83e\udd16 \u2705 Ativa os alertas sonoros e visuais quando necess\u00e1rio \ud83d\udd0a\ud83d\udca1 \u2705 Exibe feedback no Display OLED \ud83d\udcdf \u2705 Garante a comunica\u00e7\u00e3o entre os m\u00f3dulos \ud83d\udd04  </p> <p>\ud83d\udccc Exemplo de uso: \ud83d\udd39 Se um obst\u00e1culo for detectado, o Raspberry Pi Pico W decide qual alerta ativar (som, luz ou ambos). \ud83d\udd39 Permite futuras expans\u00f5es, como conectividade remota para alertas em tempo real.  </p>"},{"location":"Modulos/rasp/#4-como-ele-interage-com-os-outros-modulos","title":"\ud83d\udd04 4. Como ele interage com os outros m\u00f3dulos?","text":"<p>O Raspberry Pi Pico W \u00e9 o centro de controle do sistema, recebendo informa\u00e7\u00f5es e comandando os m\u00f3dulos para garantir a acessibilidade do usu\u00e1rio.  </p> \ud83d\udd17 M\u00f3dulo \ud83d\udee0 Intera\u00e7\u00e3o com o Raspberry Pi Pico W Sensor Ultrass\u00f4nico (HC-SR04) Envia a dist\u00e2ncia do obst\u00e1culo para processamento. \ud83d\udccf Buzzer (MLT8530) Ativado para alertar o usu\u00e1rio de perigos. \ud83d\udd0a Display OLED (SSD1306) Exibe informa\u00e7\u00f5es em tempo real. \ud83d\udcdf Matriz de LEDs RGB 5x5 Ajuda na sinaliza\u00e7\u00e3o visual para terceiros. \ud83d\udca1 Bot\u00f5es (A e B) Permitem ao usu\u00e1rio controlar fun\u00e7\u00f5es do sistema. \ud83c\udf9b <p>\ud83d\udccc Fluxo de funcionamento do Raspberry Pi Pico W: 1\ufe0f\u20e3 Recebe informa\u00e7\u00f5es dos sensores. 2\ufe0f\u20e3 Analisa os dados e decide a resposta. 3\ufe0f\u20e3 Aciona buzzer, LEDs ou display OLED, conforme necess\u00e1rio. 4\ufe0f\u20e3 Permite ao usu\u00e1rio interagir com os bot\u00f5es para personalizar a experi\u00eancia.  </p>"},{"location":"Modulos/rasp/#resumo-do-raspberry-pi-pico-w-no-br-smartguia","title":"\ud83d\ude80 Resumo do Raspberry Pi Pico W no BR SmartGuia","text":"<p>\u2705 Processa e controla todos os m\u00f3dulos do sistema \ud83d\udda5\ufe0f \u2705 Permite conectividade e expans\u00e3o futura via Wi-Fi \ud83d\udcf6 \u2705 Eficiente, r\u00e1pido e com baixo consumo de energia \u26a1 \u2705 Garante um funcionamento integrado e responsivo \ud83d\udd04  </p> <p>Com o Raspberry Pi Pico W, o BR SmartGuia se torna um sistema inteligente e acess\u00edvel, garantindo mais seguran\u00e7a e autonomia para o usu\u00e1rio! \ud83d\ude80\ud83d\udda5\ufe0f  </p>"},{"location":"Modulos/ultrassonico/","title":"\ud83d\udd0d Sensor Ultrass\u00f4nico (HC-SR04)","text":"<p>O Sensor Ultrass\u00f4nico HC-SR04 \u00e9 um dos principais componentes do BR SmartGuia, sendo respons\u00e1vel pela detec\u00e7\u00e3o de obst\u00e1culos \u00e0 frente do usu\u00e1rio. Ele mede a dist\u00e2ncia de objetos pr\u00f3ximos e envia essa informa\u00e7\u00e3o para o sistema, permitindo alertas sonoros e visuais para garantir a seguran\u00e7a do usu\u00e1rio.  </p>"},{"location":"Modulos/ultrassonico/#1-o-que-e-esse-sensor","title":"\ud83d\udccc 1. O que \u00e9 esse sensor?","text":"<p>O HC-SR04 \u00e9 um sensor de dist\u00e2ncia que utiliza ondas ultrass\u00f4nicas para detectar objetos e calcular sua proximidade. Ele \u00e9 amplamente utilizado em projetos de rob\u00f3tica e sistemas de navega\u00e7\u00e3o assistiva devido \u00e0 sua precis\u00e3o e baixo custo.  </p>"},{"location":"Modulos/ultrassonico/#2-como-ele-funciona","title":"\u2699\ufe0f 2. Como ele funciona?","text":"<p>O funcionamento do HC-SR04 se baseia no tempo de resposta das ondas ultrass\u00f4nicas:  </p> <p>1\ufe0f\u20e3 Emiss\u00e3o do Pulso: O sensor envia uma onda sonora inaud\u00edvel pelo pino Trigger. 2\ufe0f\u20e3 Reflex\u00e3o: A onda atinge um obst\u00e1culo e retorna para o sensor. 3\ufe0f\u20e3 C\u00e1lculo da Dist\u00e2ncia: O pino Echo mede o tempo que a onda demorou para voltar. 4\ufe0f\u20e3 Convers\u00e3o: O tempo \u00e9 convertido em dist\u00e2ncia (cm) e enviado ao microcontrolador.  </p> <p>\u2705 F\u00f3rmula utilizada: [ \\text{Dist\u00e2ncia} = \\frac{\\text{Tempo do Eco} \\times \\text{Velocidade do Som}}{2} ] \ud83d\udccf O sensor pode detectar objetos a uma dist\u00e2ncia de 2 cm a 4 metros!  </p>"},{"location":"Modulos/ultrassonico/#3-qual-o-papel-dele-no-br-smartguia","title":"\ud83c\udfaf 3. Qual o papel dele no BR SmartGuia?","text":"<p>No projeto, o HC-SR04 tem um papel essencial para a mobilidade segura do usu\u00e1rio:  </p> <p>\u2705 Monitora continuamente o ambiente \u00e0 frente do carrinho \ud83d\udeb6\u200d\u2642\ufe0f \u2705 Emite alertas sonoros no buzzer caso um obst\u00e1culo esteja a \u2264 15 cm \ud83d\udd0a \u2705 Atualiza as informa\u00e7\u00f5es no display OLED \ud83d\udcdf  </p> <p>Dessa forma, o sensor permite que o usu\u00e1rio tenha consci\u00eancia da proximidade de objetos, evitando colis\u00f5es.  </p>"},{"location":"Modulos/ultrassonico/#4-como-ele-interage-com-os-outros-modulos","title":"\ud83d\udd04 4. Como ele interage com os outros m\u00f3dulos?","text":"<p>O Sensor Ultrass\u00f4nico HC-SR04 est\u00e1 diretamente conectado ao Raspberry Pi Pico W e interage com outros m\u00f3dulos para proporcionar uma experi\u00eancia integrada:  </p> \ud83d\udd17 M\u00f3dulo \ud83d\udee0 Intera\u00e7\u00e3o com o HC-SR04 Buzzer (MLT8530) Emite um alerta sonoro caso um obst\u00e1culo seja detectado. \ud83d\udd0a Display OLED (SSD1306) Exibe a dist\u00e2ncia do obst\u00e1culo em tempo real. \ud83d\udcdf Matriz de LEDs RGB 5x5 Ajuda a sinalizar visualmente para terceiros. \ud83d\udca1 Bot\u00f5es (A e B) Permitem ao usu\u00e1rio ativar/desativar alertas visuais. \ud83c\udf9b Raspberry Pi Pico W Processa os dados do sensor e toma as decis\u00f5es do sistema. \ud83d\udda5 <p>\ud83d\udccc Fluxo de funcionamento do sensor: 1\ufe0f\u20e3 O HC-SR04 detecta um obst\u00e1culo pr\u00f3ximo. 2\ufe0f\u20e3 A dist\u00e2ncia \u00e9 enviada ao Raspberry Pi Pico W. 3\ufe0f\u20e3 Se o obst\u00e1culo estiver a \u2264 15 cm, o buzzer emite um alerta sonoro. 4\ufe0f\u20e3 O display OLED exibe a dist\u00e2ncia e a Matriz de LEDs acende para alertar terceiros.  </p>"},{"location":"Modulos/ultrassonico/#resumo-do-sensor-ultrassonico-hc-sr04-no-br-smartguia","title":"\ud83d\ude80 Resumo do Sensor Ultrass\u00f4nico HC-SR04 no BR SmartGuia","text":"<p>\u2705 Detec\u00e7\u00e3o precisa de obst\u00e1culos em tempo real. \u2705 Intera\u00e7\u00e3o com buzzer, display e LEDs para seguran\u00e7a e acessibilidade. \u2705 Baixo consumo de energia e compat\u00edvel com o Raspberry Pi Pico W.  </p> <p>Com esse sensor, o BR SmartGuia proporciona mais autonomia e seguran\u00e7a para o usu\u00e1rio em ambientes movimentados, como supermercados! \ud83d\uded2\u2728  </p>"},{"location":"Produto/","title":"\ud83d\uded2 BR SmartGuia","text":"<p>O BR SmartGuia \u00e9 um dispositivo assistivo projetado para auxiliar pessoas com defici\u00eancia visual em ambientes urbanos e comerciais. Ele combina tecnologia embarcada com sensores inteligentes para melhorar a seguran\u00e7a e a autonomia do usu\u00e1rio.</p>"},{"location":"Produto/#imagens-do-produto","title":"\ud83d\udcf8 Imagens do Produto","text":"<p>O BR SmartGuia possui:</p> <p>\u2714\ufe0f Sensor Ultrass\u00f4nico para detec\u00e7\u00e3o de obst\u00e1culos;</p> <p>\u2714\ufe0f Display OLED para informa\u00e7\u00e3o visual em tempo real;</p> <p>\u2714\ufe0f Matriz de LEDs RGB para sinaliza\u00e7\u00e3o visual;</p> <p>\u2714\ufe0f Buzzer para feedback auditivo;</p> <p>\u2714\ufe0f Bot\u00f5es f\u00edsicos para intera\u00e7\u00e3o com o sistema.</p>"},{"location":"Produto/#funcionalidade","title":"\ud83d\udd27 Funcionalidade","text":"<p>O BR SmartGuia funciona de forma simples e intuitiva:</p> <p>1\ufe0f\u20e3 Detecta Obst\u00e1culos em tempo real e alerta o usu\u00e1rio;</p> <p>2\ufe0f\u20e3 Emite sinais sonoros e visuais quando necess\u00e1rio;</p> <p>3\ufe0f\u20e3 Exibe informa\u00e7\u00f5es no display OLED;</p> <p>4\ufe0f\u20e3 Pode ser facilmente transportado para qualquer ambiente.</p>"},{"location":"Produto/#o-que-vem-na-embalagem","title":"\ud83d\udce6 O Que Vem na Embalagem?","text":"<ul> <li>1x BR SmartGuia montado e pronto para uso;</li> <li>1x Power Bank para alimenta\u00e7\u00e3o;</li> <li>1x Manual R\u00e1pido de Uso (em Braille para acessibilidade).</li> </ul> <p>O BR SmartGuia foi desenvolvido para proporcionar mais autonomia, seguran\u00e7a e inclus\u00e3o no dia a dia. Use com confian\u00e7a! \ud83d\ude80</p>"},{"location":"Referencias/ref/","title":"\ud83d\udcda Refer\u00eancias","text":"<p>Esta se\u00e7\u00e3o lista as principais refer\u00eancias utilizadas no desenvolvimento e documenta\u00e7\u00e3o do projeto BR SmartGuia. Elas abrangem desde documenta\u00e7\u00f5es t\u00e9cnicas at\u00e9 estudos e estat\u00edsticas sobre acessibilidade e defici\u00eancia visual.</p>"},{"location":"Referencias/ref/#documentacao-tecnica","title":"\ud83d\udd27 Documenta\u00e7\u00e3o T\u00e9cnica","text":"<p>\ud83d\udccc Hardware e SDK</p> <ul> <li>[1] Banco de Informa\u00e7\u00f5es de Hardware (BIH) - Documenta\u00e7\u00e3o interna do projeto.</li> <li> <p>Dispon\u00edvel em: Google Docs</p> </li> <li> <p>[2] RASPBERRY PI LTD. Raspberry Pi Pico C/C++ SDK. 2024.</p> </li> <li> <p>Dispon\u00edvel em: Raspberry Pi SDK</p> </li> <li> <p>[3] RASPBERRY PI LTD. RP2040 Datasheet. 2024.</p> </li> <li> <p>Dispon\u00edvel em: RP2040 Datasheet</p> </li> <li> <p>[4] BitDogLab. Manual BitDogLab.</p> </li> <li>Dispon\u00edvel em: GitHub BitDogLab</li> </ul> <p>\ud83d\udccc Sistemas Embarcados</p> <ul> <li>[10] CUGNASCA, C. E. Projetos de Sistemas Embarcados. Departamento de Engenharia de Computa\u00e7\u00e3o e Sistemas Digitais, Escola Polit\u00e9cnica da USP, 2018.</li> </ul>"},{"location":"Referencias/ref/#acessibilidade-e-deficiencia-visual","title":"\ud83d\udd0d Acessibilidade e Defici\u00eancia Visual","text":"<p>\ud83d\udccc Ferramentas e Recursos</p> <ul> <li>[5] Tradutor Braille Online.</li> <li>Dispon\u00edvel em: Tradutor Braille</li> <li>Acesso em: 16 fev. 2025.</li> </ul> <p>\ud83d\udccc Estat\u00edsticas e Dados</p> <ul> <li>[6] BRASIL. Minist\u00e9rio da Educa\u00e7\u00e3o (MEC). Defici\u00eancia Visual no Brasil.</li> <li>Dispon\u00edvel em: Portal MEC</li> <li> <p>Acesso em: 18 fev. 2025.</p> </li> <li> <p>[7] LOUIS BRAILLE. Estat\u00edsticas sobre defici\u00eancia visual no Brasil e no mundo.</p> </li> <li>Dispon\u00edvel em: Louis Braille</li> <li>Acesso em: 18 fev. 2025.</li> </ul>"},{"location":"Referencias/ref/#tecnologia-e-consumo","title":"\ud83d\uded2 Tecnologia e Consumo","text":"<p>\ud83d\udccc Integra\u00e7\u00e3o com Tecnologias Comerciais</p> <ul> <li>[8] SILVA, C. H. C. O papel dos supermercados e hipermercados nas rela\u00e7\u00f5es entre cidade, com\u00e9rcio e consumo.</li> <li> <p>Geografia, v. 30, n. 3, p. 610\u2013625, 2007.</p> </li> <li> <p>[9] Amazon lan\u00e7a carrinho de supermercado inteligente. 2020.</p> </li> <li>Dispon\u00edvel em: Startupi</li> <li>Acesso em: 18 fev. 2025.</li> </ul> <p>\ud83d\udccc Estas refer\u00eancias garantem a confiabilidade das informa\u00e7\u00f5es utilizadas no desenvolvimento do BR SmartGuia. Para mais detalhes t\u00e9cnicos, consulte as outras partes da documenta\u00e7\u00e3o e os artigos citados. \ud83d\ude80</p>"}]}